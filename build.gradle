buildscript {
  repositories {
    mavenLocal()
    maven {
      name "ArcadiaNexus"
      url "https://sandboxnexus.arcadiaanalytics.com/repository/maven-public/"
      credentials {
        username project.properties.nexusUsername as String
        password project.properties.nexusPassword as String
      }
    }
  }

  dependencies {
    classpath "com.arcadia:arcadia-docker:[3.0.2,4.0)"
    classpath 'com.arcadia:git-version:[2.2,3.0)'
  }
}

plugins {
  id 'java'
  id 'java-library'
  id 'jacoco'
  id 'maven-publish'
  id "com.github.ben-manes.versions" version "0.39.0"
  id "org.sonarqube" version "2.6.2"
}

group = "com.arcadia.logging.log4j"
version =  "1.2.0-SNAPSHOT"
description = "Log4j 2.x appender for AWS CloudWatch logs"

//apply plugin: "java"
//apply plugin: "jacoco"
//apply plugin: "idea"
//apply plugin: "maven"
//apply plugin: "maven-publish"

//sourceCompatibility = 1.8
//targetCompatibility = 1.8
tasks.withType(JavaCompile) {
  options.encoding = "UTF-8"
}

dependencies {
  implementation 'org.apache.logging.log4j:log4j-core:2.14.1'
  implementation 'com.amazonaws:aws-java-sdk-core:1.11.338'
  implementation 'com.amazonaws:aws-java-sdk-logs:1.11.338'

  testImplementation 'junit:junit:4.13.2'
  testImplementation 'org.assertj:assertj-core:3.21.0'
  //noinspection GradlePackageUpdate
  testImplementation "org.mockito:mockito-core:2.19.0"
}

jacoco {
  toolVersion = "0.8.2"
}

jacocoTestReport {
  reports {
    xml.required = true
    html.required = false
  }
}
check.dependsOn jacocoTestReport

// package source jar
task sourcesJar(type: Jar, dependsOn: classes) {
  archiveClassifier.set('sources')
  from sourceSets.main.allSource
}

publishing {
  publications {
    maven(MavenPublication) {
      from components.java
      artifact sourcesJar
    }
  }
}

allprojects {
  apply plugin: 'com.arcadia.gradle.plugin.git-version'

  def isRelease = project.property('buildMode') == 'release'
  def nexusRead = isRelease ? 'maven-public-releases' : 'maven-public'
  def nexusWrite = isRelease ? 'maven-releases' : 'maven-snapshots'
  project.logger.quiet("using nexus repository [R]: ${nexusRead.padRight(25)} [${project.name}]")

  java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
  }

  repositories {
    if (!isRelease) {
      mavenLocal()
    }
    maven {
      name "ArcadiaNexus"
      url "https://sandboxnexus.arcadiaanalytics.com/repository/$nexusRead/"
      credentials {
        username project.properties.nexusUsername as String
        password project.properties.nexusPassword as String
      }
    }
  }

  pluginManager.withPlugin('maven-publish') {
    project.logger.quiet("using nexus repository [W]: ${nexusWrite.padRight(25)} [${project.name}]")

    publishing.repositories {
      maven {
        name "ArcadiaNexus"
        url "https://sandboxnexus.arcadiaanalytics.com/repository/$nexusWrite/"
        credentials {
          username project.properties.nexusUsername as String
          password project.properties.nexusPassword as String
        }
      }
    }
  }
}